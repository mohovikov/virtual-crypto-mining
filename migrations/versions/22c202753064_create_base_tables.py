"""create base tables

Revision ID: 22c202753064
Revises: 
Create Date: 2025-08-19 13:49:58.100710

"""
from datetime import datetime, timezone
from dateutil.relativedelta import relativedelta
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '22c202753064'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('privileges_groups',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=30), nullable=False),
        sa.Column('privileges', sa.Integer(), nullable=False),
        sa.Column('color_class', sa.String(length=30), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        mysql_engine='InnoDB'
    )
    with op.batch_alter_table('privileges_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_privileges_groups_name'), ['name'], unique=True)

    op.create_table('users',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('username', sa.String(length=30), nullable=False),
        sa.Column('username_aka', sa.String(length=32), nullable=True),
        sa.Column('userpage', sa.Text(), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('privileges', sa.Integer(), nullable=False),
        sa.Column('country', sa.CHAR(length=2), nullable=False),
        sa.Column('sponsor_expire', sa.DateTime(timezone=True), nullable=True),
        sa.Column('register_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        mysql_engine='InnoDB'
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)
    
    op.execute("ALTER TABLE users AUTO_INCREMENT = 999")

    conn.execute(sa.text("""
        INSERT INTO users (username, username_aka, userpage, email, password_hash, privileges, country, sponsor_expire,  register_at)
        VALUES (:username, :username_aka, :userpage, :email, :password_hash, :privileges, :country, :sponsor_expire, :register_at)
        """),
        {
            "username": "Kira Light",
            "username_aka": "Кира Лайт",
            "userpage": "Виртуальный криптоинвестор. Уверенный взгляд, деловой стиль и стратегическое мышление ― её ключ к успеху в мире криптовалют.",
            "email": "kira.light@cryptomining.io",
            "password_hash": "BOT_ACCOUNT_AUTHORIZATION_PROHIBITED",
            "privileges": 1,
            "country": "BY",
            "sponsor_expire": datetime.now(timezone.utc) + relativedelta(years=10),
            "register_at": datetime.now(timezone.utc)
        }
    )

    op.create_table('clans',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('short_name', sa.String(length=255), nullable=False),
        sa.Column('logo_file', sa.String(length=255), nullable=True),
        sa.Column('header_file', sa.String(length=255), nullable=True),
        sa.Column('url', sa.String(length=255), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_open', sa.Boolean(), nullable=False),
        sa.Column('leader_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['leader_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        sa.UniqueConstraint('short_name'),
        mysql_engine='InnoDB'
    )
    op.create_table('clan_members',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('clan_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['clan_id'], ['clans.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id'),
        mysql_engine='InnoDB'
    )
    with op.batch_alter_table('clan_members', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clan_members_clan_id'), ['clan_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('clan_members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clan_members_clan_id'))

    op.drop_table('clan_members')
    op.drop_table('clans')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('privileges_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_privileges_groups_name'))

    op.drop_table('privileges_groups')
    # ### end Alembic commands ###
